//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinFormsClient.RemoteService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FieldTanks.TankColor", Namespace="http://schemas.datacontract.org/2004/07/WcfServer")]
    public enum FieldTanksTankColor : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Blue = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Red = -1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteService.IFieldTanks")]
    public interface IFieldTanks {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/InitTanks", ReplyAction="http://tempuri.org/IFieldTanks/InitTanksResponse")]
        void InitTanks(WinFormsClient.RemoteService.FieldTanksTankColor tankColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/InitTanks", ReplyAction="http://tempuri.org/IFieldTanks/InitTanksResponse")]
        System.Threading.Tasks.Task InitTanksAsync(WinFormsClient.RemoteService.FieldTanksTankColor tankColor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/FillField", ReplyAction="http://tempuri.org/IFieldTanks/FillFieldResponse")]
        int[] FillField();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/FillField", ReplyAction="http://tempuri.org/IFieldTanks/FillFieldResponse")]
        System.Threading.Tasks.Task<int[]> FillFieldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/InitField", ReplyAction="http://tempuri.org/IFieldTanks/InitFieldResponse")]
        void InitField(int cellCount, int tanksCount, int tankVisible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/InitField", ReplyAction="http://tempuri.org/IFieldTanks/InitFieldResponse")]
        System.Threading.Tasks.Task InitFieldAsync(int cellCount, int tanksCount, int tankVisible);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/ApplyStrategy", ReplyAction="http://tempuri.org/IFieldTanks/ApplyStrategyResponse")]
        void ApplyStrategy(WinFormsClient.RemoteService.FieldTanksTankColor tankColor, bool attack);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFieldTanks/ApplyStrategy", ReplyAction="http://tempuri.org/IFieldTanks/ApplyStrategyResponse")]
        System.Threading.Tasks.Task ApplyStrategyAsync(WinFormsClient.RemoteService.FieldTanksTankColor tankColor, bool attack);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFieldTanksChannel : WinFormsClient.RemoteService.IFieldTanks, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FieldTanksClient : System.ServiceModel.ClientBase<WinFormsClient.RemoteService.IFieldTanks>, WinFormsClient.RemoteService.IFieldTanks {
        
        public FieldTanksClient() {
        }
        
        public FieldTanksClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FieldTanksClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FieldTanksClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FieldTanksClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InitTanks(WinFormsClient.RemoteService.FieldTanksTankColor tankColor) {
            base.Channel.InitTanks(tankColor);
        }
        
        public System.Threading.Tasks.Task InitTanksAsync(WinFormsClient.RemoteService.FieldTanksTankColor tankColor) {
            return base.Channel.InitTanksAsync(tankColor);
        }
        
        public int[] FillField() {
            return base.Channel.FillField();
        }
        
        public System.Threading.Tasks.Task<int[]> FillFieldAsync() {
            return base.Channel.FillFieldAsync();
        }
        
        public void InitField(int cellCount, int tanksCount, int tankVisible) {
            base.Channel.InitField(cellCount, tanksCount, tankVisible);
        }
        
        public System.Threading.Tasks.Task InitFieldAsync(int cellCount, int tanksCount, int tankVisible) {
            return base.Channel.InitFieldAsync(cellCount, tanksCount, tankVisible);
        }
        
        public void ApplyStrategy(WinFormsClient.RemoteService.FieldTanksTankColor tankColor, bool attack) {
            base.Channel.ApplyStrategy(tankColor, attack);
        }
        
        public System.Threading.Tasks.Task ApplyStrategyAsync(WinFormsClient.RemoteService.FieldTanksTankColor tankColor, bool attack) {
            return base.Channel.ApplyStrategyAsync(tankColor, attack);
        }
    }
}
